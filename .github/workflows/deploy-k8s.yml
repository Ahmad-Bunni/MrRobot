on: [push]

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_SECRET_NAME: mr-robot-api-registery-secret
  APP_NAME: mrrobot
  NAMESPACE: mrrobot-api

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      # Connect to Azure Container Registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Container build and push to a Azure Container Registry (ACR)
      - run: |
          docker build . -t ${{ secrets.REGISTRY_SERVER }}/${{ env.APP_NAME }}:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_SERVER }}/${{ env.APP_NAME }}:${{ github.sha }}

      # Set the target Azure Kubernetes Service (AKS) cluster.
      - uses: azure/k8s-set-context@v2
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      # Create namespace if doesn't exist
      - run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o json | kubectl apply -f -

      # Create image pull secret for ACR
      - uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ secrets.REGISTRY_SERVER }}
          container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
          container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          secret-name: ${{ env.REGISTRY_SECRET_NAME }}
          namespace: ${{ env.NAMESPACE }}
          arguments: --force true

      # Create image pull secret for ACR
      - uses: azure/k8s-bake@v2.2
        with:
          renderEngine: "helm"
          helmChart: "./Infra/charts/mrrobot-api/"
          overrideFiles: "./Infra/charts/mrrobot-api/values-override.yaml"
          overrides: |
            image.repository: ${{ secrets.REGISTRY_SERVER }}/${{ env.APP_NAME }}
            image.tag: ${{ github.sha }}
            namespace: ${{ env.NAMESPACE }}
          helm-version: "latest"
        id: bake

      # Deploy app to AKS
      - uses: azure/k8s-deploy@v1
        with:
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: ${{ secrets.REGISTRY_SERVER }}/${{ env.APP_NAME }}:${{ github.sha }}
          imagepullsecrets: ${{ env.REGISTRY_SECRET_NAME }}
          namespace: ${{ env.NAMESPACE }}
